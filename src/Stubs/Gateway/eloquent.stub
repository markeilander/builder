<?php
namespace  {{namespace}};

use {{ginterface_namespace}}\{{model}}Gateway as Gateways;
use {{validation_namespace}}\{{model}}Validator as Validator;
use {{interface_namespace}}\{{model}}Repository as Repository;
use {{presenter_namespace}}\{{model}}Presenter as Presenter;
use Eilander\Gateway\Eloquent\EloquentGateway;

class {{class}} extends EloquentGateway implements Gateways
{

    /**
     * Specify Repository class name
     *
     * @return string
     */
    public function repository()
    {
        return Repository::class;
    }

    /**
     * Specify Presenter class name
     *
     * @return string
     */
    public function presenter()
    {
        return Presenter::class;
    }

    /**
     * Specify Validator class name
     *
     * @return string
     */
    public function validator()
    {
        return Validator::class;
    }

    /**
     * Add
     *
     * @param $data
     * @return mixed
     */
    public function create(array $data, $validation = '') {
        return parent::create($data, Validator::RULE_CREATE);
    }

    /**
     * Update
     *
     * @param $data
     * @return mixed
     */
    public function update(array $data, $id, $validation = '') {
        return parent::update($data, $id, Validator::RULE_UPDATE);
    }
}
